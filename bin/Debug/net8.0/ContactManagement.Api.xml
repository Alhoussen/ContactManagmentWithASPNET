<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContactManagement.Api</name>
    </assembly>
    <members>
        <member name="T:ContactManagement.Api.Controllers.ContactsController">
            <summary>
            Contrôleur pour la gestion des contacts
            </summary>
        </member>
        <member name="M:ContactManagement.Api.Controllers.ContactsController.GetContacts(ContactManagement.Api.Models.DTOs.ContactSearchDto,System.Threading.CancellationToken)">
            <summary>
            Récupère tous les contacts avec pagination et recherche
            </summary>
            <param name="searchDto">Paramètres de recherche et pagination</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Liste paginée des contacts</returns>
            <response code="200">Retourne la liste des contacts</response>
            <response code="400">Paramètres de requête invalides</response>
        </member>
        <member name="M:ContactManagement.Api.Controllers.ContactsController.GetContact(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Récupère un contact par son identifiant
            </summary>
            <param name="id">Identifiant du contact</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact demandé</returns>
            <response code="200">Retourne le contact</response>
            <response code="404">Contact non trouvé</response>
        </member>
        <member name="M:ContactManagement.Api.Controllers.ContactsController.CreateContact(ContactManagement.Api.Models.DTOs.CreateContactDto,System.Threading.CancellationToken)">
            <summary>
            Crée un nouveau contact
            </summary>
            <param name="createContactDto">Données du contact à créer</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact créé</returns>
            <response code="201">Contact créé avec succès</response>
            <response code="400">Données invalides</response>
            <response code="409">Email déjà utilisé</response>
        </member>
        <member name="M:ContactManagement.Api.Controllers.ContactsController.UpdateContact(System.Int32,ContactManagement.Api.Models.DTOs.UpdateContactDto,System.Threading.CancellationToken)">
            <summary>
            Met à jour un contact existant
            </summary>
            <param name="id">Identifiant du contact à mettre à jour</param>
            <param name="updateContactDto">Nouvelles données du contact</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact mis à jour</returns>
            <response code="200">Contact mis à jour avec succès</response>
            <response code="400">Données invalides</response>
            <response code="404">Contact non trouvé</response>
            <response code="409">Email déjà utilisé</response>
        </member>
        <member name="M:ContactManagement.Api.Controllers.ContactsController.DeleteContact(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Supprime un contact
            </summary>
            <param name="id">Identifiant du contact à supprimer</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Confirmation de suppression</returns>
            <response code="204">Contact supprimé avec succès</response>
            <response code="404">Contact non trouvé</response>
        </member>
        <member name="T:ContactManagement.Api.Controllers.HomeController">
            <summary>
            Contrôleur principal pour les vues
            </summary>
        </member>
        <member name="M:ContactManagement.Api.Controllers.HomeController.Index">
            <summary>
            Page d'accueil avec la liste des contacts
            </summary>
            <returns>Vue principale</returns>
        </member>
        <member name="M:ContactManagement.Api.Controllers.HomeController.Details(System.Int32)">
            <summary>
            Page de détails d'un contact
            </summary>
            <param name="id">ID du contact</param>
            <returns>Vue de détails</returns>
        </member>
        <member name="T:ContactManagement.Api.Data.ContactManagementDbContext">
            <summary>
            Contexte de base de données pour la gestion des contacts
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Data.ContactManagementDbContext.Contacts">
            <summary>
            Collection des contacts
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Mapping.ContactMappingProfile">
            <summary>
            Profil de mapping AutoMapper pour les contacts
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Middleware.GlobalExceptionMiddleware">
            <summary>
            Middleware de gestion globale des exceptions
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Middleware.ErrorResponse">
            <summary>
            Modèle de réponse d'erreur
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Middleware.ErrorResponse.StatusCode">
            <summary>
            Code de statut HTTP
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Middleware.ErrorResponse.Message">
            <summary>
            Message d'erreur
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Middleware.ErrorResponse.Timestamp">
            <summary>
            Horodatage de l'erreur
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ContactManagement.Api.Migrations.FixSeedData">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.FixSeedData.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.FixSeedData.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ContactManagement.Api.Migrations.FixSeedData.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ContactManagement.Api.Models.Contact">
            <summary>
            Représente un contact dans le système de gestion
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.Id">
            <summary>
            Identifiant unique du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.FirstName">
            <summary>
            Prénom du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.LastName">
            <summary>
            Nom de famille du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.Email">
            <summary>
            Adresse email du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.PhoneNumber">
            <summary>
            Numéro de téléphone du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.Address">
            <summary>
            Adresse du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.CreatedAt">
            <summary>
            Date de création du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.UpdatedAt">
            <summary>
            Date de dernière mise à jour du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.Contact.FullName">
            <summary>
            Nom complet du contact (propriété calculée)
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Models.DTOs.ContactDto">
            <summary>
            DTO pour la lecture des contacts
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.Id">
            <summary>
            Identifiant unique du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.FirstName">
            <summary>
            Prénom du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.LastName">
            <summary>
            Nom de famille du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.FullName">
            <summary>
            Nom complet du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.Email">
            <summary>
            Adresse email du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.PhoneNumber">
            <summary>
            Numéro de téléphone du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.Address">
            <summary>
            Adresse du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.CreatedAt">
            <summary>
            Date de création du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactDto.UpdatedAt">
            <summary>
            Date de dernière mise à jour du contact
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Models.DTOs.ContactSearchDto">
            <summary>
            DTO pour les paramètres de recherche et pagination des contacts
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactSearchDto.SearchTerm">
            <summary>
            Terme de recherche pour filtrer par nom, prénom ou email
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactSearchDto.PageNumber">
            <summary>
            Numéro de page (commence à 1)
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactSearchDto.PageSize">
            <summary>
            Nombre d'éléments par page (max 100)
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactSearchDto.SortBy">
            <summary>
            Champ de tri (FirstName, LastName, Email, CreatedAt)
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.ContactSearchDto.SortOrder">
            <summary>
            Ordre de tri (asc ou desc)
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Models.DTOs.CreateContactDto">
            <summary>
            DTO pour la création d'un nouveau contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.CreateContactDto.FirstName">
            <summary>
            Prénom du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.CreateContactDto.LastName">
            <summary>
            Nom de famille du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.CreateContactDto.Email">
            <summary>
            Adresse email du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.CreateContactDto.PhoneNumber">
            <summary>
            Numéro de téléphone du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.CreateContactDto.Address">
            <summary>
            Adresse du contact
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Models.DTOs.PagedResultDto`1">
            <summary>
            DTO générique pour les résultats paginés
            </summary>
            <typeparam name="T">Type des éléments dans la page</typeparam>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.Items">
            <summary>
            Liste des éléments de la page courante
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.PageNumber">
            <summary>
            Numéro de la page courante
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.PageSize">
            <summary>
            Nombre d'éléments par page
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.TotalCount">
            <summary>
            Nombre total d'éléments
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.TotalPages">
            <summary>
            Nombre total de pages
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.HasPreviousPage">
            <summary>
            Indique s'il y a une page précédente
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.PagedResultDto`1.HasNextPage">
            <summary>
            Indique s'il y a une page suivante
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Models.DTOs.UpdateContactDto">
            <summary>
            DTO pour la mise à jour d'un contact existant
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.UpdateContactDto.FirstName">
            <summary>
            Prénom du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.UpdateContactDto.LastName">
            <summary>
            Nom de famille du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.UpdateContactDto.Email">
            <summary>
            Adresse email du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.UpdateContactDto.PhoneNumber">
            <summary>
            Numéro de téléphone du contact
            </summary>
        </member>
        <member name="P:ContactManagement.Api.Models.DTOs.UpdateContactDto.Address">
            <summary>
            Adresse du contact
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Services.ContactService">
            <summary>
            Service de gestion des contacts
            </summary>
        </member>
        <member name="T:ContactManagement.Api.Services.IContactService">
            <summary>
            Interface pour le service de gestion des contacts
            </summary>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.GetContactsAsync(ContactManagement.Api.Models.DTOs.ContactSearchDto,System.Threading.CancellationToken)">
            <summary>
            Récupère tous les contacts avec pagination et recherche
            </summary>
            <param name="searchDto">Paramètres de recherche et pagination</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Résultat paginé des contacts</returns>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.GetContactByIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Récupère un contact par son identifiant
            </summary>
            <param name="id">Identifiant du contact</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact s'il existe, null sinon</returns>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.CreateContactAsync(ContactManagement.Api.Models.DTOs.CreateContactDto,System.Threading.CancellationToken)">
            <summary>
            Crée un nouveau contact
            </summary>
            <param name="createContactDto">Données du contact à créer</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact créé</returns>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.UpdateContactAsync(System.Int32,ContactManagement.Api.Models.DTOs.UpdateContactDto,System.Threading.CancellationToken)">
            <summary>
            Met à jour un contact existant
            </summary>
            <param name="id">Identifiant du contact à mettre à jour</param>
            <param name="updateContactDto">Nouvelles données du contact</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>Le contact mis à jour s'il existe, null sinon</returns>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.DeleteContactAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Supprime un contact
            </summary>
            <param name="id">Identifiant du contact à supprimer</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>True si le contact a été supprimé, false s'il n'existait pas</returns>
        </member>
        <member name="M:ContactManagement.Api.Services.IContactService.IsEmailExistsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Vérifie si un email est déjà utilisé par un autre contact
            </summary>
            <param name="email">Email à vérifier</param>
            <param name="excludeContactId">ID du contact à exclure de la vérification (pour les mises à jour)</param>
            <param name="cancellationToken">Token d'annulation</param>
            <returns>True si l'email existe déjà, false sinon</returns>
        </member>
    </members>
</doc>
